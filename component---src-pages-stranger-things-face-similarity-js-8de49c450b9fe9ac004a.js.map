{"version":3,"sources":["webpack:///./src/images/avatar.jpg","webpack:///./src/components/progressProvider.js","webpack:///./node_modules/react-circular-progressbar/dist/index.esm.js","webpack:///./src/pages/stranger-things-face-similarity.js","webpack:///./src/images/avatar.gif","webpack:///./src/images/face-recognition.gif"],"names":["module","exports","ProgressProvider","valueStart","valueEnd","children","React","useState","value","setValue","useEffect","_extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","Path","_a","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","getDashStyle","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","CircularProgressbar","_super","__","constructor","create","__extends","getBackgroundPadding","props","background","backgroundPadding","getPathRadius","getPathRatio","minValue","maxValue","min","max","render","circleRatio","classes","styles","text","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","defaultProps","CircularProgressbarWithChildren","circularProgressbarProps","e","indexOf","getOwnPropertySymbols","__rest","position","width","height","marginTop","display","flexDirection","justifyContent","alignItems","intendedChars","chars","allChars","filter","c","includes","id","sort","a","doProcess","file","setOpen","setLoading","setData","setTries","notif","variant","undefined","window","formData","FormData","append","fsAPI","fetch","method","credentials","body","res","json","resJSON","message","result","status","code","map","idx","similarity","round","tries","forEach","msg","console","error","Render","files","setFiles","open","loading","data","useSnackbar","enqueueSnackbar","mediaURL","image_path","src","faceGIF","alt","container","component","spacing","char","key","row","item","xs","sm","md","lg","xl","title","name","arrow","placement","boxShadow","avatar","avatarGIF","avatarJPG","dropzoneText","filesLimit","maxFileSize","dropzoneClass","dropzoneParagraphClass","previewGridClasses","image","acceptedFiles","onChange","fullWidth","size","color","onClick","setTimeout","justify","slice","onClose","aria-labelledby","aria-describedby","maxWidth","FaceSimilarity","navNumber","description","to"],"mappings":"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","file":"component---src-pages-stranger-things-face-similarity-js-8de49c450b9fe9ac004a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/avatar-ff96942a9ee6111f2a6424c615bd0222.jpg\";","import React from \"react\";\r\n\r\n// If you don't have a version of React that supports\r\n// hooks, you can use a class-based version of this\r\n// component in ProgressProviderUsingClass.js\r\nconst ProgressProvider = ({ valueStart, valueEnd, children }) => {\r\n  const [value, setValue] = React.useState(valueStart);\r\n  React.useEffect(() => {\r\n    setValue(valueEnd);\r\n  }, [valueEnd]);\r\n\r\n  return children(value);\r\n};\r\nexport default ProgressProvider;\r\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.set-prototype-of\";\nimport { createElement, Component } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar VIEWBOX_WIDTH = 100;\nvar VIEWBOX_HEIGHT = 100;\nvar VIEWBOX_HEIGHT_HALF = 50;\nvar VIEWBOX_CENTER_X = 50;\nvar VIEWBOX_CENTER_Y = 50;\n\nfunction Path(_a) {\n  var className = _a.className,\n      counterClockwise = _a.counterClockwise,\n      dashRatio = _a.dashRatio,\n      pathRadius = _a.pathRadius,\n      strokeWidth = _a.strokeWidth,\n      style = _a.style;\n  return createElement(\"path\", {\n    className: className,\n    style: Object.assign({}, style, getDashStyle({\n      pathRadius: pathRadius,\n      dashRatio: dashRatio,\n      counterClockwise: counterClockwise\n    })),\n    d: getPathDescription({\n      pathRadius: pathRadius,\n      counterClockwise: counterClockwise\n    }),\n    strokeWidth: strokeWidth,\n    fillOpacity: 0\n  });\n}\n\nfunction getPathDescription(_a) {\n  var pathRadius = _a.pathRadius,\n      counterClockwise = _a.counterClockwise;\n  var radius = pathRadius;\n  var rotation = counterClockwise ? 1 : 0;\n  return \"\\n      M \" + VIEWBOX_CENTER_X + \",\" + VIEWBOX_CENTER_Y + \"\\n      m 0,-\" + radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,\" + 2 * radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,-\" + 2 * radius + \"\\n    \";\n}\n\nfunction getDashStyle(_a) {\n  var counterClockwise = _a.counterClockwise,\n      dashRatio = _a.dashRatio,\n      pathRadius = _a.pathRadius;\n  var diameter = Math.PI * 2 * pathRadius;\n  var gapLength = (1 - dashRatio) * diameter;\n  return {\n    strokeDasharray: diameter + \"px \" + diameter + \"px\",\n    strokeDashoffset: (counterClockwise ? -gapLength : gapLength) + \"px\"\n  };\n}\n\nvar CircularProgressbar = function (_super) {\n  __extends(CircularProgressbar, _super);\n\n  function CircularProgressbar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CircularProgressbar.prototype.getBackgroundPadding = function () {\n    if (!this.props.background) {\n      return 0;\n    }\n\n    return this.props.backgroundPadding;\n  };\n\n  CircularProgressbar.prototype.getPathRadius = function () {\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  };\n\n  CircularProgressbar.prototype.getPathRatio = function () {\n    var _a = this.props,\n        value = _a.value,\n        minValue = _a.minValue,\n        maxValue = _a.maxValue;\n    var boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  };\n\n  CircularProgressbar.prototype.render = function () {\n    var _a = this.props,\n        circleRatio = _a.circleRatio,\n        className = _a.className,\n        classes = _a.classes,\n        counterClockwise = _a.counterClockwise,\n        styles = _a.styles,\n        strokeWidth = _a.strokeWidth,\n        text = _a.text;\n    var pathRadius = this.getPathRadius();\n    var pathRatio = this.getPathRatio();\n    return createElement(\"svg\", {\n      className: classes.root + \" \" + className,\n      style: styles.root,\n      viewBox: \"0 0 \" + VIEWBOX_WIDTH + \" \" + VIEWBOX_HEIGHT,\n      \"data-test-id\": \"CircularProgressbar\"\n    }, this.props.background ? createElement(\"circle\", {\n      className: classes.background,\n      style: styles.background,\n      cx: VIEWBOX_CENTER_X,\n      cy: VIEWBOX_CENTER_Y,\n      r: VIEWBOX_HEIGHT_HALF\n    }) : null, createElement(Path, {\n      className: classes.trail,\n      counterClockwise: counterClockwise,\n      dashRatio: circleRatio,\n      pathRadius: pathRadius,\n      strokeWidth: strokeWidth,\n      style: styles.trail\n    }), createElement(Path, {\n      className: classes.path,\n      counterClockwise: counterClockwise,\n      dashRatio: pathRatio * circleRatio,\n      pathRadius: pathRadius,\n      strokeWidth: strokeWidth,\n      style: styles.path\n    }), text ? createElement(\"text\", {\n      className: classes.text,\n      style: styles.text,\n      x: VIEWBOX_CENTER_X,\n      y: VIEWBOX_CENTER_Y\n    }, text) : null);\n  };\n\n  CircularProgressbar.defaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background'\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {}\n    },\n    text: ''\n  };\n  return CircularProgressbar;\n}(Component);\n\nfunction CircularProgressbarWithChildren(props) {\n  var children = props.children,\n      circularProgressbarProps = __rest(props, [\"children\"]);\n\n  return createElement(\"div\", {\n    \"data-test-id\": \"CircularProgressbarWithChildren\"\n  }, createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    }\n  }, createElement(CircularProgressbar, _assign({}, circularProgressbarProps)), props.children ? createElement(\"div\", {\n    \"data-test-id\": \"CircularProgressbarWithChildren__children\",\n    style: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      marginTop: '-100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, props.children) : null));\n}\n\nfunction buildStyles(_a) {\n  var rotation = _a.rotation,\n      strokeLinecap = _a.strokeLinecap,\n      textColor = _a.textColor,\n      textSize = _a.textSize,\n      pathColor = _a.pathColor,\n      pathTransition = _a.pathTransition,\n      pathTransitionDuration = _a.pathTransitionDuration,\n      trailColor = _a.trailColor,\n      backgroundColor = _a.backgroundColor;\n  var rotationTransform = rotation == null ? undefined : \"rotate(\" + rotation + \"turn)\";\n  var rotationTransformOrigin = rotation == null ? undefined : 'center center';\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : pathTransitionDuration + \"s\"\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor\n    })\n  };\n}\n\nfunction removeUndefinedValues(obj) {\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n\nexport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles };","import React, { useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Image from '../components/image';\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Grid, Avatar, Tooltip, Button, List, ListItem, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\r\nimport { Assistant } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { useSnackbar } from 'notistack';\r\nimport { ClockLoader, MoonLoader } from \"react-spinners\";\r\nimport { CircularProgressbarWithChildren as CircularProgressbar } from 'react-circular-progressbar';\r\nimport ProgressProvider from '../components/progressProvider';\r\n\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport '../styles/face-similarity.scss';\r\nimport allChars from '../data/characters.json';\r\nimport faceGIF from '../images/face-recognition.gif';\r\nimport avatarGIF from '../images/avatar.gif';\r\nimport avatarJPG from '../images/avatar.jpg';\r\n\r\nconst intendedChars = ['eleven', 'mike', 'will', 'dustin', 'lucas', 'max', 'nancy', 'jonathan', 'steve', 'joyce', 'jim'];\r\nlet chars = allChars.filter((c) => (intendedChars.includes(c.id)) ? c : null)\r\nchars = chars.sort((a, b) => intendedChars.indexOf(a.id) - intendedChars.indexOf(b.id))\r\n\r\nconst onClick = (files, tries, setOpen, setTries, notif) => {\r\n  const file = files[0];\r\n  if (!file) {\r\n    notif(\"No files selected!\", { variant: \"error\" });\r\n    return;\r\n  }\r\n  if (tries > 3) {\r\n    notif(\"You've tried more than 3 times\", { variant: \"warning\" });\r\n    notif(\"Come back just a few seconds later\", { variant: \"default\" });\r\n    if (tries === 4) {\r\n      setTimeout(() => {\r\n        setTries(0);\r\n      }, 10000);\r\n    }\r\n    return;\r\n  }\r\n  setOpen(true)\r\n}\r\n\r\nconst doProcess = async (file, setOpen, setLoading, setData, setTries, notif) => {\r\n  notif(\"Please wait ...\", { variant: \"info\" });\r\n  setLoading(true);\r\n  if (typeof (window) !== undefined) {\r\n    setOpen(false);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const fsAPI = window.fsAPI;\r\n    try {\r\n      const res = await fetch(fsAPI, { method: \"POST\", credentials: \"same-origin\", body: formData })\r\n      const resJSON = await res.json();\r\n      const { message, result, status } = resJSON;\r\n      if (status.code === 200) {\r\n        result.result = (result.result || []).map((r, idx) => ({ similarity: Math.round(r * 10000) / 100, ...chars[idx] })).sort((a, b) => b.similarity - a.similarity);\r\n        setData(result);\r\n        setTries((tries) => tries > 4 ? tries : tries + 1);\r\n        notif(\"Processed Successfully\", { variant: \"success\" });\r\n      }\r\n      else {\r\n        (message || []).forEach((msg) => {\r\n          notif(msg, { variant: \"error\" });\r\n        });\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n      notif(\"Something went wrong!\", { variant: \"error\" });\r\n      notif(\"Try again later\", { variant: \"default\" });\r\n    }\r\n    finally {\r\n      return;\r\n    }\r\n  }\r\n  notif(\"No API FOUND!\", { variant: \"error\" });\r\n}\r\n\r\nconst Render = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [tries, setTries] = useState(0);\r\n  const { enqueueSnackbar: notif } = useSnackbar();\r\n  const mediaURL = (typeof (window) !== undefined) ? window.mediaURL : \"\";\r\n  const { image_path, result } = (data || {});\r\n\r\n  return (\r\n    <div id=\"FaceSimilarity\">\r\n      <div className=\"head\">\r\n        <img src={faceGIF} alt=\"stranger things face similarity\" />\r\n        <h1>Check out the <b>face-similarity</b> matching process and find out who do you look like</h1>\r\n      </div>\r\n      <div>\r\n        <h2>You'll be matched with one of these characters:</h2>\r\n        <Grid container component=\"ul\" spacing={1}>\r\n          {\r\n            chars.map((char) => (\r\n              <Grid key={char.row} item component=\"li\" xs={4} sm={3} md={2} lg={1} xl={1}>\r\n                <Tooltip title={char.name} arrow placement=\"top\">\r\n                  <Avatar style={{ width: 100, height: 100, boxShadow: \"0 0 6px #6b6b6b\" }}>\r\n                    <Image name={char.avatar} style={{ width: \"100%\", height: \"100%\" }} />\r\n                  </Avatar>\r\n                </Tooltip>\r\n              </Grid>\r\n            ))\r\n          }\r\n        </Grid>\r\n        <div><b>Your Face Identity is similar to</b> ... !</div>\r\n        <div><b>Guess Who? Just do the process to make sure!</b></div>\r\n      </div>\r\n      <br />\r\n      <h3 className=\"ai-ml\"><Assistant /> Powered By Artificial Intelligence & Machine Learning</h3>\r\n      {\r\n        !loading && !data &&\r\n        (\r\n          <>\r\n            <div className=\"help\">\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                  <img className=\"gif\" src={avatarGIF} alt=\"avatar\" />\r\n                </Grid>\r\n                <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                  <img className=\"gif\" src={avatarJPG} alt=\"avatar\" />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <div className=\"tips\">\r\n              <Typography variant=\"h4\" component=\"h3\">Tips:</Typography>\r\n              <List>\r\n                <ListItem>Your photo should <u>not</u> have much background <b>textures</b></ListItem>\r\n                <ListItem>The dimension of your photo is better to be <u>more than</u>&nbsp;<b>200x200</b></ListItem>\r\n                <ListItem>Your photo <u>doesn't need</u> to be cropped to contain just the <b>face</b>. The process will recognise the face!</ListItem>\r\n                <ListItem>Your photo should contain <b>one face</b> because the process will consider the first face that is recognised!</ListItem>\r\n              </List>\r\n            </div>\r\n            <div className=\"dropzone-wrapper\">\r\n              <DropzoneArea\r\n                dropzoneText=\"Drag and drop an image here or click\"\r\n                filesLimit={1}\r\n                maxFileSize={1000000}\r\n                dropzoneClass=\"dropzone\"\r\n                dropzoneParagraphClass=\"text\"\r\n                previewGridClasses={{ container: \"container\", item: \"item\", image: \"image\" }}\r\n                acceptedFiles={[\"image/*\"]}\r\n                onChange={(files) => setFiles(files)}\r\n              />\r\n            </div>\r\n            <Button\r\n              fullWidth\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => onClick(files, tries, setOpen, setTries, notif)}\r\n            >\r\n              Run Process\r\n            </Button>\r\n          </>\r\n        )\r\n      }\r\n      {\r\n        loading &&\r\n        (\r\n          <div className=\"loading\">\r\n            <ClockLoader\r\n              color=\"#C11B1F\"\r\n              size={250}\r\n              loading\r\n            />\r\n            <div className=\"running\">\r\n              <MoonLoader size={20} />\r\n              <h3>Running On Server</h3>\r\n              <MoonLoader size={20} />\r\n            </div>\r\n            <Typography variant=\"h6\">Please Wait</Typography>\r\n            <Typography variant=\"subtitle1\">It might take a minute or two</Typography>\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        !loading && data &&\r\n        (\r\n          <div className=\"result\">\r\n            <Button fullWidth color=\"secondary\" variant=\"outlined\" onClick={() => setData(null)}>Try Another One</Button>\r\n            <br />\r\n            <br />\r\n            <Typography variant=\"subtitle1\">\r\n              Make sure the <b>red square</b> is around your intended face (in the left image)\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              Otherwise, you must use a better photo so that our agent could detect the face\r\n            </Typography>\r\n            <br />\r\n            <Grid container spacing={8}>\r\n              <Grid item xs={12} sm={12} md={4} lg={5}>\r\n                <img src={`${mediaURL}/${image_path}`} alt=\"detected\" />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={8} lg={7}>\r\n                <div className=\"first\">\r\n                  <ProgressProvider valueStart={0} valueEnd={result[0].similarity}>\r\n                    {\r\n                      (value) => (\r\n                        <CircularProgressbar className=\"result-circle\" strokeWidth={4} background backgroundPadding={2} value={value} maxValue={100}>\r\n                          <Tooltip title={result[0].name} arrow placement=\"top\">\r\n                            <Avatar className=\"avatar\">\r\n                              <Image name={result[0].avatar} style={{ width: \"100%\", height: \"100%\" }} />\r\n                            </Avatar>\r\n                          </Tooltip>\r\n                        </CircularProgressbar>\r\n                      )\r\n                    }\r\n                  </ProgressProvider>\r\n                  <Typography variant=\"h4\">{Math.round(result[0].similarity)}%</Typography>\r\n                </div>\r\n                <div className=\"others\">\r\n                  <Grid container spacing={2} justify=\"center\">\r\n                    {\r\n                      (result.slice(1)).map((res) => (\r\n                        <Grid key={res.name} item xs={6} sm={6} md={3}>\r\n                          <ProgressProvider valueStart={0} valueEnd={res.similarity}>\r\n                            {\r\n                              (value) => (\r\n\r\n                                <CircularProgressbar className=\"result-circle\" strokeWidth={4} background backgroundPadding={2} value={value} maxValue={100}>\r\n                                  <Tooltip title={res.name} arrow placement=\"top\">\r\n                                    <Avatar className=\"avatar\">\r\n                                      <Image name={res.avatar} style={{ width: \"100%\", height: \"100%\" }} />\r\n                                    </Avatar>\r\n                                  </Tooltip>\r\n                                </CircularProgressbar>\r\n                              )\r\n                            }\r\n                          </ProgressProvider>\r\n                          <Typography variant=\"h5\">{Math.round(res.similarity)}%</Typography>\r\n                        </Grid>\r\n                      ))\r\n                    }\r\n                  </Grid>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )\r\n      }\r\n      <br />\r\n      <br />\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Run the Face Similarity process?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            You are about to upload your photo to get the face matching results.\r\n            <br />\r\n            The photo will be collected <b>safely</b> on our servers in order to be utilized in the future machine learning datasets.\r\n            This will be used only for educational or progressing purposes. (just the face part)\r\n            <br />\r\n            The resulting photo will be deleted within 24 hours from our servers.\r\n            <br />\r\n            <b>Do you agree with these terms?</b>\r\n            <br />\r\n            <br />\r\n            (to continue, you need to agree!)\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={() => doProcess(files[0], setOpen, setLoading, setData, setTries, notif)} color=\"secondary\">\r\n            Yes, Of Course\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}\r\n\r\nconst FaceSimilarity = () => (\r\n  <Layout navNumber={3}>\r\n    <SEO\r\n      title=\"Find Which Characters You Do Look Like The Most - Face Similarity\"\r\n      description={\r\n        \"Do you wanna know which stranger things character you look like the most? \" +\r\n        \"upload your photo contains a face, then get the similarity result.\"\r\n      }\r\n    />\r\n    <Render />\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default FaceSimilarity\r\n","module.exports = __webpack_public_path__ + \"static/avatar-6a14f67ceb652fb23669ddf7a92145c2.gif\";","module.exports = __webpack_public_path__ + \"static/face-recognition-17c19e23da7b95fa33edfcfd5870bde7.gif\";"],"sourceRoot":""}