{"version":3,"sources":["webpack:///./src/images/avatar-generator/base-4.jpg","webpack:///./src/images/avatar-generator/base-3.jpg","webpack:///./src/images/avatar-generator/base-5.jpg","webpack:///./src/pages/stranger-things-avatar-generator.js","webpack:///./src/images/avatar-generator/base-6.jpg","webpack:///./src/images/avatar-generator/base-8.jpg","webpack:///./src/images/face-morphing.gif","webpack:///./src/images/avatar-generator/base-7.jpg","webpack:///./src/images/avatar-generator/base-2.jpg","webpack:///./src/images/avatar-generator/base-1.jpg","webpack:///./src/images/avatar-gen.gif"],"names":["module","exports","intendedChars","chars","allChars","filter","c","includes","id","sort","a","b","indexOf","doProcess","file","type","setOpen","setLoading","setData","setTries","notif","variant","scrollInterval","setInterval","loading","document","getElementById","clearInterval","window","scrollTo","offsetTop","undefined","formData","FormData","append","agAPI","fetch","method","credentials","body","res","json","resJSON","message","result","status","code","tries","forEach","msg","console","error","Render","useState","files","setFiles","setType","open","data","useSnackbar","enqueueSnackbar","mediaURL","image_path","className","src","avatarGIF","alt","justify","container","component","spacing","map","char","key","row","item","xs","sm","md","lg","xl","title","name","arrow","placement","style","width","height","margin","boxShadow","avatar","faceMorphing","href","img","base3","idx","base8","base7","base2","base4","base5","base6","base1","onClick","dropzoneText","filesLimit","maxFileSize","dropzoneClass","dropzoneParagraphClass","previewGridClasses","image","acceptedFiles","onChange","fullWidth","size","color","setTimeout","textAlign","onClose","aria-labelledby","aria-describedby","maxWidth","keywords","mi","AvatarGenerator","navNumber","description","join","why","accuracy","version","to"],"mappings":"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","file":"component---src-pages-stranger-things-avatar-generator-js-5adb7f5e0d006591b34f.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/base-4-fe6f3f157e7dddf73a33b467de2a286d.jpg\";","module.exports = __webpack_public_path__ + \"static/base-3-cf17adb2711b64f66707e365e7f802c2.jpg\";","module.exports = __webpack_public_path__ + \"static/base-5-6042fb6e3c3636eceb824f7522fb0b34.jpg\";","import React, { useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Image from '../components/image';\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Grid, Avatar, Tooltip, Button, List, ListItem, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Fab } from \"@material-ui/core\";\r\nimport { Assistant } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { useSnackbar } from 'notistack';\r\nimport { ClockLoader, MoonLoader } from \"react-spinners\";\r\nimport MoreInfo from '../components/moreInfo';\r\n\r\nimport '../styles/avatar-generator.scss';\r\nimport allChars from '../data/characters.json';\r\nimport avatarGIF from '../images/avatar-gen.gif';\r\nimport faceMorphing from '../images/face-morphing.gif';\r\nimport base1 from '../images/avatar-generator/base-1.jpg';\r\nimport base2 from '../images/avatar-generator/base-2.jpg';\r\nimport base3 from '../images/avatar-generator/base-3.jpg';\r\nimport base4 from '../images/avatar-generator/base-4.jpg';\r\nimport base5 from '../images/avatar-generator/base-5.jpg';\r\nimport base6 from '../images/avatar-generator/base-6.jpg';\r\nimport base7 from '../images/avatar-generator/base-7.jpg';\r\nimport base8 from '../images/avatar-generator/base-8.jpg';\r\n\r\nconst intendedChars = ['steve', 'robin', 'eleven', 'jim', 'will', 'billy', 'max'];\r\nlet chars = allChars.filter((c) => (intendedChars.includes(c.id)) ? c : null)\r\nchars = chars.sort((a, b) => intendedChars.indexOf(a.id) - intendedChars.indexOf(b.id))\r\n\r\nconst onClick = (files, tries, setOpen, setTries, notif) => {\r\n  const file = files[0];\r\n  if (!file) {\r\n    notif(\"No files selected!\", { variant: \"error\" });\r\n    return;\r\n  }\r\n  if (tries > 3) {\r\n    notif(\"You've tried more than 3 times\", { variant: \"warning\" });\r\n    notif(\"Come back just a few seconds later\", { variant: \"default\" });\r\n    if (tries === 4) {\r\n      setTimeout(() => {\r\n        setTries(0);\r\n      }, 10000);\r\n    }\r\n    return;\r\n  }\r\n  setOpen(true)\r\n}\r\n\r\nconst doProcess = async (file, type, setOpen, setLoading, setData, setTries, notif) => {\r\n  notif(\"Please wait ...\", { variant: \"info\" });\r\n  setLoading(true);\r\n  const scrollInterval = setInterval(() => {\r\n    const loading = document.getElementById(\"loading\");\r\n    if (loading) {\r\n      clearInterval(scrollInterval);\r\n      window.scrollTo(0, loading.offsetTop);\r\n    }\r\n  }, 10);\r\n  if (typeof (window) !== undefined) {\r\n    setOpen(false);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"type\", type);\r\n    const agAPI = window.agAPI;\r\n    try {\r\n      const res = await fetch(agAPI, { method: \"POST\", credentials: \"same-origin\", body: formData })\r\n      const resJSON = await res.json();\r\n      const { message, result, status } = resJSON;\r\n      if (status.code === 200) {\r\n        setData(result);\r\n        setTries((tries) => tries > 4 ? tries : tries + 1);\r\n        notif(\"Processed Successfully\", { variant: \"success\" });\r\n      }\r\n      else {\r\n        (message || []).forEach((msg) => {\r\n          notif(msg, { variant: \"error\" });\r\n        });\r\n        if (status.code === 500)\r\n          notif(\"Maybe face not detected\", { variant: \"error\" });\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n      notif(\"Something went wrong!\", { variant: \"error\" });\r\n      notif(\"Try again later\", { variant: \"default\" });\r\n    }\r\n    finally {\r\n      return;\r\n    }\r\n  }\r\n  notif(\"No API FOUND!\", { variant: \"error\" });\r\n}\r\n\r\nconst Render = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [type, setType] = useState(1);\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [tries, setTries] = useState(0);\r\n  const { enqueueSnackbar: notif } = useSnackbar();\r\n  const mediaURL = (typeof (window) !== `undefined`) ? window.mediaURL : \"\";\r\n  const { image_path } = (data || {});\r\n\r\n  return (\r\n    <div id=\"AvatarGenerator\">\r\n      <div className=\"head\">\r\n        <img src={avatarGIF} alt=\"stranger things face similarity\" />\r\n        <h1>Check out the <b>avatar-generation</b> process and generates artistic avatars blended with your face</h1>\r\n      </div>\r\n      <div>\r\n        <h2>You can generate avatars based on these characters:</h2>\r\n        <Grid justify=\"center\" container component=\"ul\" spacing={1}>\r\n          {\r\n            chars.map((char) => (\r\n              <Grid key={char.row} item component=\"li\" xs={6} sm={3} md={2} lg={1} xl={1}>\r\n                <Tooltip title={char.name} arrow placement=\"top\">\r\n                  <Avatar style={{ width: 100, height: 100, margin: \"0 auto\", boxShadow: \"0 0 6px #6b6b6b\" }}>\r\n                    <Image name={char.avatar} style={{ width: \"100%\", height: \"100%\" }} />\r\n                  </Avatar>\r\n                </Tooltip>\r\n              </Grid>\r\n            ))\r\n          }\r\n        </Grid>\r\n        <div><b>This process will create a blended avatar photo of ST characters with the recognised face of the image you'll upload.</b></div>\r\n      </div>\r\n      <br />\r\n      <h3 className=\"ai-ml\"><Assistant /> Powered By Artificial Intelligence & Machine Learning</h3>\r\n      {\r\n        !loading && !data &&\r\n        (\r\n          <Grid>\r\n            <div className=\"help\">\r\n              <Grid justify=\"center\" container spacing={4}>\r\n                <Grid item xs={10} sm={10} md={9} lg={8} xl={10}>\r\n                  <figure className=\"gif\">\r\n                    <img src={faceMorphing} alt=\"face morphing\" />\r\n                    <figcaption>\r\n                      <a href=\"https://dribbble.com/shots/2153975-Face-Morphing-GIF\">https://dribbble.com/shots/2153975-Face-Morphing-GIF</a>\r\n                    </figcaption>\r\n                  </figure>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <div className=\"tips\">\r\n              <Typography variant=\"h4\" component=\"h3\">Tips:</Typography>\r\n              <List>\r\n                <ListItem>Your photo should <u>not</u> have too much background <b>textures</b></ListItem>\r\n                <ListItem>The dimension of your photo is better to be <u>more than</u>&nbsp;<b>200x200</b></ListItem>\r\n                <ListItem>Your photo <u>should not</u> be cropped to contain just the <b>face</b>. The process will recognise the face landmark itself!</ListItem>\r\n                <ListItem>Your photo should contain <b>one face</b> because the process will consider the first face that is recognised!</ListItem>\r\n              </List>\r\n            </div>\r\n            <div className=\"type\">\r\n              <h4>\r\n                Choose the one you wanna be used as a base:\r\n              </h4>\r\n              <Grid className=\"type-grid\" container spacing={2}>\r\n                {\r\n                  [\r\n                    { img: base3, idx: 2 },\r\n                    { img: base8, idx: 7 },\r\n                    { img: base7, idx: 6 },\r\n                    { img: base2, idx: 1 },\r\n                    { img: base4, idx: 3 },\r\n                    { img: base5, idx: 4 },\r\n                    { img: base6, idx: 5 },\r\n                    { img: base1, idx: 0 },\r\n                  ]\r\n                    .map((b, idx) => (\r\n                      <Grid className=\"type-item\" key={idx} item xs={6} sm={3} md={3}>\r\n                        <Fab variant=\"round\" className={b.idx + 1 === type ? \"fab active\" : \"fab\"} onClick={() => setType(b.idx + 1)}>\r\n                          <Avatar className=\"avatar\" src={b.img} />\r\n                        </Fab>\r\n                      </Grid>\r\n                    ))\r\n                }\r\n              </Grid>\r\n            </div>\r\n            <div className=\"dropzone-wrapper\">\r\n              <DropzoneArea\r\n                dropzoneText=\"Drag and drop an image here or click\"\r\n                filesLimit={1}\r\n                maxFileSize={3000000}\r\n                dropzoneClass=\"dropzone\"\r\n                dropzoneParagraphClass=\"text\"\r\n                previewGridClasses={{ container: \"container\", item: \"item\", image: \"image\" }}\r\n                acceptedFiles={[\"image/*\"]}\r\n                onChange={(files) => setFiles(files)}\r\n              />\r\n            </div>\r\n            <Button\r\n              fullWidth\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => onClick(files, tries, setOpen, setTries, notif)}\r\n            >\r\n              Run Process\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      }\r\n      {\r\n        loading &&\r\n        (\r\n          <div id=\"loading\" className=\"loading\">\r\n            <ClockLoader\r\n              color=\"#C11B1F\"\r\n              size={250}\r\n              loading\r\n            />\r\n            <div className=\"running\">\r\n              <MoonLoader size={20} />\r\n              <h3 style={{ textAlign: \"center\" }}>Running On Server</h3>\r\n              <MoonLoader size={20} />\r\n            </div>\r\n            <Typography variant=\"h6\">Please Wait</Typography>\r\n            <Typography variant=\"subtitle1\">It might take a minute or two</Typography>\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        !loading && data &&\r\n        (\r\n          <div className=\"result\">\r\n            <Button fullWidth color=\"secondary\" variant=\"outlined\" onClick={() => setData(null)}>Try Another One</Button>\r\n            <br />\r\n            <br />\r\n            <Typography variant=\"subtitle1\">\r\n              The <b>face</b> in your own photo should have <b>proper angles and perspective</b> ...\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              Otherwise, the result could be terribly unpleasant!\r\n            </Typography>\r\n            <br />\r\n            <Grid justify=\"center\" container spacing={2}>\r\n              <Grid item xs={12} sm={12} md={10} lg={8}>\r\n                <img className=\"generated-image\" src={`${mediaURL}/${image_path}`} alt=\"generated\" />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )\r\n      }\r\n      <br />\r\n      <br />\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Run the Avatar Generator?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            You are about to upload your photo to get the blended avatar.\r\n            <br />\r\n            The photo will be collected <b>safely</b> on our servers and will be deleted after the process.\r\n            <br />\r\n            The resulting photo will be deleted too within 24 hours from our servers.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => doProcess(files[0], type, setOpen, setLoading, setData, setTries, notif)} color=\"secondary\">\r\n            Continue\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}\r\n\r\nconst description = `Take the process of generating stranger things avatar blended with your face. this will mix your photo with one of the stranger things people on demand`;\r\nconst keywords = [\r\n  \"stranger things stuffs\",\r\n  \"stranger things\",\r\n  \"nerdy avatar generator\",\r\n  \"avatar generation\",\r\n  \"ST\",\r\n  \"Eleven\",\r\n  \"Jane Hopper\",\r\n  \"Will\",\r\n  \"Jim Hopper\",\r\n  \"Mad Max\",\r\n  \"Billy\",\r\n  \"Robin\",\r\n  \"Steve\"\r\n]\r\n\r\nconst mi = {\r\n  why: `<ul>\r\n    <li>To have some fun</li>\r\n    <li>To make some learnings -- our learning, not machine learning :)</li>\r\n    <li>To make some artistic avatars</li>\r\n  </ul>`,\r\n  method: `<ul>\r\n    <li>Computer vision approach (image processing)</li>\r\n  </ul>\r\n  <hr />\r\n  <div>Stages:</div>\r\n  <br />\r\n  <ul>\r\n  <li>Face Alignment</li>\r\n  <li>Facial Landmark Detection</li>\r\n  <li>Find Convex Hull</li>\r\n  <li>Delaunay Triangulation</li>\r\n  <li>Affine Warp Triangles</li>\r\n  <li>Seamless Cloning</li>\r\n  <li>Make Artistic</li>\r\n  </ul>\r\n  <hr />\r\n  <div>You can see how to make an artistic image in the below youtube video:</div>\r\n  <div>(Just one approach of making artistic has been mentioned)</div>\r\n  <br />\r\n  <div>\r\n  <iframe width=\"100%\" height=\"300\" src=\"https://www.youtube-nocookie.com/embed/q4ME_sUbbH0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n  </div>\r\n  `,\r\n  accuracy: `<div>\r\n    Can't say\r\n  </div>`,\r\n  version: `<div>v0.1.2</div>`,\r\n}\r\n\r\nconst AvatarGenerator = () => (\r\n  <Layout navNumber={2}>\r\n    <SEO\r\n      title=\"Obtain Your Avatar Of Your Face With Stranger Things Casts Flavour - Avatar Generator\"\r\n      description={description}\r\n      keywords={keywords.join(\",\")}\r\n    />\r\n    <Render />\r\n    <div>\r\n      <MoreInfo\r\n        why={mi.why}\r\n        method={mi.method}\r\n        accuracy={mi.accuracy}\r\n        version={mi.version}\r\n      />\r\n    </div>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default AvatarGenerator\r\n","module.exports = __webpack_public_path__ + \"static/base-6-6556581407f8bf92aa6834be2fb423ce.jpg\";","module.exports = __webpack_public_path__ + \"static/base-8-657f1de8a54ec4d483a95bd3561b2c10.jpg\";","module.exports = __webpack_public_path__ + \"static/face-morphing-b631ce339a790750a488d03aeb9bfe67.gif\";","module.exports = __webpack_public_path__ + \"static/base-7-40421594daa5c3580abc30fb38cae585.jpg\";","module.exports = __webpack_public_path__ + \"static/base-2-9e067d83cd0b572b9a3a466d15865ff0.jpg\";","module.exports = __webpack_public_path__ + \"static/base-1-0fddf7abf908310e4a40721eec0d229b.jpg\";","module.exports = __webpack_public_path__ + \"static/avatar-gen-fb8152eab362f7a956b6df4baaa49901.gif\";"],"sourceRoot":""}